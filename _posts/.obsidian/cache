{"files":{"2019-04-29-jdk-ConcurrentHashMap-1.md":{"mtime":1556713213148.1306,"size":4015,"hash":"6de857f3733a7d8344e0afbeab59ba6326a8029def14e12e0005d436021b14aa"},"2019-04-29-jdk-ConcurrentHashMap-2.md":{"mtime":1556713213148.283,"size":5229,"hash":"b3a1183595e6b6ce2b2945bb8914e864ed565bd65e9ab6964ce2b38499c438bf"},"2019-04-29-jdk-ConcurrentHashMap-3.md":{"mtime":1556713213148.4224,"size":3625,"hash":"c30b90e47df57ac46dde936e56aa669791eb80d12643b7598f5ab0c9013e4a63"},"2019-04-29-jdk-longadder.md":{"mtime":1556713213148.5796,"size":5794,"hash":"c55f52073c6a41a497a5df2baaf1386d439a8e765b99a48f267f959e745ed531"},"2019-04-29-threadlocal-study.md":{"mtime":1556713213148.7402,"size":8010,"hash":"d76a64eb816b5d9b77b1caf061fc3a5771d78a009598ac1cd6862326980f97f9"},"2019-05-02-codefight-leetcode-322.md":{"mtime":1556857960997,"size":2143,"hash":"439ac7b7a4e9f39090a9c37d52789450e3453014f04325b3dd9d170dab550235"},"2019-05-03-go-gopl-variable.md":{"mtime":1556857986530.1108,"size":2252,"hash":"32bd4f0cec5f599a700348f1a8e479c33c0818c32643332fde8f239213ac3cd8"},"2019-05-04-codefight-leetcode-357.md":{"mtime":1556938733767.401,"size":1536,"hash":"95cbe4e4dcf21b3c57453d95a763abc92194f178367ff4902a7cb994e31849ad"},"2019-05-06-codefight-leetcode-375.md":{"mtime":1557751357853.181,"size":1945,"hash":"3bfb07b75f8d6a6bc1a54dff383cb49c7e43857b98efeacabff38ab367fa60eb"},"2019-05-13-codefight-leetcode-376.md":{"mtime":1557752840380.9822,"size":2615,"hash":"55d412a2038630d200f976592b84bb847e41a4c80f84718212133ab13bb6eb93"},"2019-06-02-kube-pod-label.md":{"mtime":1559461198289.9124,"size":4147,"hash":"4d40ba78167bb9beb2b644d9368644a566ae70a3dbd440e95f5eaf54b8c1dec7"},"2019-06-02-kube-pod-start.md":{"mtime":1559458124155.7256,"size":1911,"hash":"74d5690bb460ae1d9d8197f59e98ae238897bdfb488f8a508a31add72b5bc45e"},"2019-06-02-kube-start.md":{"mtime":1560295950861.9014,"size":4716,"hash":"03057113c1c901da57be51fb523ef52b01ccc768056f746581bcbe7280e81e43"},"2019-06-04-docker-concept.md":{"mtime":1560436809926.866,"size":21043,"hash":"a3fb37d300c9bf37311ffd695b5d7360ffa0e5c784ab921e47a74369fb69e6c9"},"2019-06-09-kuberbetes-concept.md":{"mtime":1560343246021.5388,"size":21918,"hash":"1b26d1f58e54b76547f18581cac1fccda4262ea825011846acf64972cc9a5787"},"2019-06-12-jvm-method-bind.md":{"mtime":1563463832579.7449,"size":5593,"hash":"63c0da2b6a0a8597767ec896ff9d9a4776be9d5dcd7a1acf7ff9f3d6b50fc368"},"2019-07-21-jvm-monitor-concept.md":{"mtime":1563893649455.7625,"size":37919,"hash":"2648cb433e1f7fbf71ded0343ba97def05cc34d03e3c661fb64a33230c1a41e9"},"2019-07-27-netty-memorypool-concept.md":{"mtime":1564190868010.4094,"size":45973,"hash":"25ba936ed2e5f46688e5b6d80bbf6b73fd77362d964e8c2cb85a34099189d570"},"2019-07-29-netty-threadmodel-analysis.md":{"mtime":1564840983248.8284,"size":10347,"hash":"6480e30ae8d3749e12b38d76658562a128ed28556b200578feb336daf729997c"},"2019-09-07-rocketmq-broker-message-handle.md":{"mtime":1568045416932.247,"size":30290,"hash":"1885f2738d2b84fcf3ec2450a29b83db25f4e9d7840eae661093da109e19b53f"},"2019-09-08-operatingsystem-process.md":{"mtime":1568214801083.777,"size":2548,"hash":"dd1a76225249b1f4148dcb4d3668d3f471b0418b4b520810d4516bdddc195e40"},"2019-09-15-rocketmq-indexfile.md":{"mtime":1568530005620.1377,"size":4660,"hash":"05a0a1d197bfbb0e456a9b9df95b30ed0ca7411fcbb40db556dcbf51cb46367d"},"2019-09-16-operatingsystem-thread.md":{"mtime":1568642088505.398,"size":2532,"hash":"8f9415d2fd1016cf4303caa4dadc377e5999763336cf203a97d17e5ea548bc57"},"2019-09-20-jvm-gc-problem.md":{"mtime":1569156172451.9563,"size":5988,"hash":"5ac52829633e6240d80c50e022b4811ca952dbd66881995cc410893abe8c37a2"},"2019-09-20-kube-cluster-create.md":{"mtime":1569156012757.4705,"size":8382,"hash":"545decc284ca2401be2bb05d7e004a1bdaa02d0717ba228a793a5843eeaf3693"},"2019-10-06-jdk-stream-sa.md":{"mtime":1570356855985,"size":15975,"hash":"b7a9fa5fa07c46bd435706c3c42e3c26098bc2bf0aa5a26afc278a0d3c6edd70"},"2020-01-08-rocketmq-dledger-01.md":{"mtime":1578494524638.1943,"size":11988,"hash":"17b31e63d2a1d8e04fc35941e3a61c034482a588af4b98e685b022fc9506e220"},"2020-02-17-rocketmq-dledger-02.md":{"mtime":1581945330142.8274,"size":8426,"hash":"35211fa50e41871c596f75933fe5ecf63728a2d58a9915fecea09ce115fb3651"},"2020-02-18-rocketmq-dledger-03.md":{"mtime":1582074017240.006,"size":6595,"hash":"61baf84651c039505eeb79ffa72178d2f314bf811047dda4881d6cc4d02f8f10"},"2020-02-18-rocketmq-dledger-04.md":{"mtime":1582030616985.647,"size":27861,"hash":"4fa8c0d6e8f5197c283189593c24a2bcf0802a621ca618f1126c635363071fb0"},"2020-06-07-zookeeper-leader-elect.md":{"mtime":1591710869080.5688,"size":10092,"hash":"21508f6a33f3f70dfc7e5c9a658783099a3d6b1b9dcfc02d13f536bb03e280a5"},"2020-06-09-rocketmq-messageconsume.md":{"mtime":1592041137502.4253,"size":53341,"hash":"1f4ba9c9174f47988d3cab520c9b26982d113a94b7bb95756cd0a6c0c381d829"},"2020-06-13-zookeeper-datasync.md":{"mtime":1592134856483.102,"size":16267,"hash":"0f418df4f8021e94c9265e1f2b8597b61b72f6eb9ab0bbccf229d536a5155887"},"2022-06-23-kafka-study.md":{"mtime":1595862632144.9084,"size":7467,"hash":"5a53b2960322021ebbac7405a151f923b9c7ea0fbd6e5904a3a5391f5586f521"},"Kafka核心概念.md":{"mtime":1594560594265.0413,"size":3614,"hash":"4e8c310927cd7b49319ce898b4d78e0b2c5808e30cf665aca681e5dd60b154cc"},"未解决的问题.md":{"mtime":1594568467985.0085,"size":245,"hash":"64f8385886013f926a84d9f3a60cac74f569aa6c2255440ee1e77c71a999f2df"},"2022-06-23-kafka-broker-request-process.md":{"mtime":1594656607367.2397,"size":5193,"hash":"3434ac7f57274ec27941fa7caca94d5c63cb734a050e2374b0fa041a30145188"},"2022-07-27 mosn请求流程笔记.md":{"mtime":1596125183006.0115,"size":4905,"hash":"184d16995e7e2f2e1b4e4de5528d43bed4ef230b39c93d1af6a7089bc6443b52"},"2020-08-02-zookeeper-request-handle.md":{"mtime":1596559890175.8267,"size":5628,"hash":"b7da21dffa3a77145d5eaf77b20a9d5319d1691a2e346e02eb7e04a096ad554c"},"zookeeper客户端请求.png":{"mtime":1596470021485.4412,"size":197290,"hash":"47dd69e689e4765097c55a5c07a972623d21886761c21ef2771dd7de5cfc93e7"}},"metadata":{"6de857f3733a7d8344e0afbeab59ba6326a8029def14e12e0005d436021b14aa":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JDK源码:ConcurrentHashMap解析(一)-get方法详解\"\ndate:   2019-04-29 18:30:00 +0700\ncategories: [java, jdk]","level":2},{"line":7,"heading":"概述","level":2},{"line":10,"heading":"重要属性解析","level":2},{"line":41,"heading":"读方法解析","level":2},{"line":43,"heading":"get方法解析","level":3},{"line":79,"heading":"ForwardingNode","level":5}]},"b3a1183595e6b6ce2b2945bb8914e864ed565bd65e9ab6964ce2b38499c438bf":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JDK源码:ConcurrentHashMap解析(二)-位运算详解\"\ndate:   2019-04-29 18:30:00 +0700\ncategories: [java, jdk]","level":2},{"line":7,"heading":"概论","level":2},{"line":10,"heading":"sizeCtl","level":2},{"line":36,"heading":"sizeCtl的深入理解","level":2},{"line":38,"heading":"initTable()","level":4},{"line":67,"heading":"addCount()","level":4},{"line":120,"heading":"helpTransfer()","level":4},{"line":144,"heading":"transfer方法片段","level":4}]},"c30b90e47df57ac46dde936e56aa669791eb80d12643b7598f5ab0c9013e4a63":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JDK源码:ConcurrentHashMap解析(三)-put解析\"\ndate:   2019-04-29 18:30:00 +0700\ncategories: [java, jdk]","level":2},{"line":7,"heading":"概论","level":2},{"line":11,"heading":"源码","level":2},{"line":17,"heading":"shortCut部分","level":4},{"line":49,"heading":"链表遍历部分","level":4}]},"c55f52073c6a41a497a5df2baaf1386d439a8e765b99a48f267f959e745ed531":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JDK源码:LongAdder与Striped64解析\"\ndate:   2019-04-29 18:12:00 +0700\ncategories: [java, jdk]","level":2},{"line":7,"heading":"概述","level":2},{"line":12,"heading":"动态分段","level":2},{"line":19,"heading":"主要流程","level":2},{"line":37,"heading":"具体实现","level":2},{"line":129,"heading":"关于sum方法","level":4}]},"d76a64eb816b5d9b77b1caf061fc3a5771d78a009598ac1cd6862326980f97f9":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JDK源码:ThreadLocal解析\"\ndate:   2019-04-29 18:11:00 +0700\ncategories: [java, jdk]","level":2},{"line":7,"heading":"概述","level":2},{"line":25,"heading":"getEntry方法","level":2},{"line":40,"heading":"getEntryAfterMiss方法猜测","level":4},{"line":44,"heading":"getEntryAfterMiss方法解析","level":4},{"line":77,"heading":"set方法解析","level":2},{"line":79,"heading":"解析前的猜测","level":4},{"line":84,"heading":"Let us 解析!","level":4},{"line":113,"heading":"replaceStaleEntry解析","level":4},{"line":169,"heading":"槽的清理","level":2},{"line":171,"heading":"expungeStaleEntry方法解析","level":4},{"line":216,"heading":"cleanSomeSlots方法解析","level":4},{"line":237,"heading":"备注","level":5}]},"439ac7b7a4e9f39090a9c37d52789450e3453014f04325b3dd9d170dab550235":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Leetcode-322-零钱兑换\"\ndate:   2019-05-02 13:39:00 +0700\ncategories: [algorithm, dynamic programming]","level":2},{"line":7,"heading":"题目","level":2},{"line":10,"heading":"示例1","level":4},{"line":17,"heading":"思路","level":2},{"line":30,"heading":"代码","level":2}]},"32bd4f0cec5f599a700348f1a8e479c33c0818c32643332fde8f239213ac3cd8":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Golang学习:变量命名与声明\"\ndate:   2019-05-03 12:32:00 +0700\ncategories: [golang]","level":2},{"line":6,"heading":"命名","level":2},{"line":11,"heading":"关键字","level":4},{"line":34,"heading":"声明","level":2},{"line":37,"heading":"var关键字","level":3},{"line":46,"heading":"简短变量声明","level":3},{"line":58,"heading":"指针","level":2}]},"95cbe4e4dcf21b3c57453d95a763abc92194f178367ff4902a7cb994e31849ad":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Leetcode-357-计算各个位数不同的数字个数\"\ndate:   2019-05-04 10:07:00 +0700\ncategories: [algorithm, dynamic programming]","level":2},{"line":7,"heading":"题目","level":2},{"line":10,"heading":"示例1","level":4},{"line":17,"heading":"思路","level":2},{"line":37,"heading":"代码","level":2}]},"3bfb07b75f8d6a6bc1a54dff383cb49c7e43857b98efeacabff38ab367fa60eb":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Leetcode-375-猜数字大小 II\"\ndate:   2019-05-06 17:43:00 +0700\ncategories: [algorithm, dynamic programming]","level":2},{"line":7,"heading":"题目","level":2},{"line":17,"heading":"示例","level":4},{"line":31,"heading":"思路","level":2},{"line":36,"heading":"代码","level":2}]},"55d412a2038630d200f976592b84bb847e41a4c80f84718212133ab13bb6eb93":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Leetcode-376-摆动序列\"\ndate:   2019-05-13 20:43:00 +0700\ncategories: [algorithm, dynamic programming]","level":2},{"line":7,"heading":"题目","level":2},{"line":15,"heading":"示例","level":4},{"line":29,"heading":"思路","level":2},{"line":36,"heading":"代码","level":2}]},"4d40ba78167bb9beb2b644d9368644a566ae70a3dbd440e95f5eaf54b8c1dec7":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Kubernetes学习: 使用label管理pod\"\ndate:   2019-06-02 15:39:00 +0700\ncategories: [k8s]","level":2},{"line":7,"heading":"困境","level":2},{"line":10,"heading":"label的基本使用","level":2},{"line":12,"heading":"label介绍","level":4},{"line":16,"heading":"如何创建label","level":4},{"line":63,"heading":"修改标签","level":4},{"line":85,"heading":"标签选择器--label selector","level":2},{"line":87,"heading":"基本用法示例","level":4},{"line":123,"heading":"使用标签分类工作节点","level":4}]},"74d5690bb460ae1d9d8197f59e98ae238897bdfb488f8a508a31add72b5bc45e":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Kubernetes学习: pod入门\"\ndate:   2019-06-02 14:47:00 +0700\ncategories: [k8s]","level":2},{"line":6,"heading":"使用YAML创建一个pod描述文件","level":4},{"line":36,"heading":"得到pod的完整定义","level":4},{"line":42,"heading":"查看应用程序的日志","level":4},{"line":56,"heading":"向pod中发送请求","level":4}]},"03057113c1c901da57be51fb523ef52b01ccc768056f746581bcbe7280e81e43":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Kubernetes学习: 使用minikube在Kubernetes上运行第一个应用\"\ndate:   2019-06-02 13:47:00 +0700\ncategories: [k8s, docker]","level":2},{"line":7,"heading":"准备工作","level":2},{"line":9,"heading":"安装docker","level":3},{"line":14,"heading":"安装VirtualVM","level":3},{"line":17,"heading":"安装kubectl","level":3},{"line":27,"heading":"安装minikube","level":3},{"line":39,"heading":"正式开始","level":2},{"line":41,"heading":"准备一个应用","level":4},{"line":43,"heading":"启动minikube","level":3},{"line":62,"heading":"部署应用","level":3},{"line":87,"heading":"从外部访问应用","level":3},{"line":110,"heading":"水平伸缩应用","level":3},{"line":147,"heading":"dashboard","level":3}]},"a3fb37d300c9bf37311ffd695b5d7360ffa0e5c784ab921e47a74369fb69e6c9":{"links":[],"embeds":[{"line":39,"link":"/static/img/engine-components-flow.png","original":"![avatar](/static/img/engine-components-flow.png)","beforeContext":"","afterContext":"<br><br>下面这张图片则展示了docker的总体架构:"},{"line":44,"link":"/static/img/architecture.svg","original":"![avatar](/static/img/architecture.svg)","beforeContext":"","afterContext":""},{"line":379,"link":"/static/img/types-of-mounts.png","original":"![avatar](/static/img/types-of-mounts.png)","beforeContext":"","afterContext":""},{"line":589,"link":"/static/img/Docker-CI.png","original":"![avatar](/static/img/Docker-CI.png)","beforeContext":"","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"docker简介以及基本使用\"\ndate:   2019-06-04 13:47:00 +0700\ncategories: [docker]","level":2},{"line":7,"heading":"What is docker？","level":2},{"line":13,"heading":"什么是容器？","level":4},{"line":20,"heading":"容器与虚拟机的相同与不同之处","level":4},{"line":28,"heading":"为什么容器可以实现隔离","level":4},{"line":33,"heading":"Docker的组成","level":4},{"line":50,"heading":"为什么使用Docker","level":2},{"line":62,"heading":"创建镜像","level":2},{"line":65,"heading":"Dockerfile","level":4},{"line":119,"heading":"Dockerfile基本命令参考","level":4},{"line":129,"heading":"使用Dockerfile构建Java应用镜像","level":4},{"line":159,"heading":"使用maven插件创建Java应用镜像","level":4},{"line":161,"heading":"docker-maven-plugin","level":5},{"line":233,"heading":"Jib","level":5},{"line":308,"heading":"常用操作","level":2},{"line":370,"heading":"存储","level":2},{"line":385,"heading":"Volume","level":4},{"line":463,"heading":"Bind mount","level":4},{"line":491,"heading":"网络","level":2},{"line":585,"heading":"Docker与Jenkins持续构建","level":2}]},"1b26d1f58e54b76547f18581cac1fccda4262ea825011846acf64972cc9a5787":{"links":[],"embeds":[{"line":25,"link":"/static/img/K8sOverview-1.png","original":"![avatar](/static/img/K8sOverview-1.png)","beforeContext":"","afterContext":""},{"line":33,"link":"/static/img/Pod-1.png","original":"![avatar](/static/img/Pod-1.png)","beforeContext":"","afterContext":""},{"line":42,"link":"/static/img/Pod-2.svg","original":"![avatar](/static/img/Pod-2.svg)","beforeContext":"","afterContext":""},{"line":133,"link":"/static/img/ReplicationController-1.png","original":"![avatar](/static/img/ReplicationController-1.png)","beforeContext":"","afterContext":""},{"line":208,"link":"/static/img/Deployment-1.png","original":"![avatar](/static/img/Deployment-1.png)","beforeContext":"","afterContext":""},{"line":238,"link":"/static/img/DaemonSet-1.png","original":"![avatar](/static/img/DaemonSet-1.png)","beforeContext":"","afterContext":""},{"line":252,"link":"/static/img/Service-1.png","original":"![avatar](/static/img/Service-1.png)","beforeContext":"","afterContext":""},{"line":371,"link":"/static/img/Ingress-1.png","original":"![avatar](/static/img/Ingress-1.png)","beforeContext":"下图为Ingress的工作流程, 客户端首先对kubia.example.com进行DNS查找, DNS服务器返回了Ingress Controller的IP, 客户端然后通过这个IP对Ingress Controller发送HTTP请求, Controller通过客户端请求的路径匹配到了后端的一个服务, 然后通过与该服务相关联的EndPoint对象查看pod IP, 并将客户端的请求转发给其中一个pod.","afterContext":""},{"line":411,"link":"/static/img/PVPVC-1.png","original":"![avatar](/static/img/PVPVC-1.png)","beforeContext":"","afterContext":""},{"line":429,"link":"/static/img/Resource-1.png","original":"![avatar](/static/img/Resource-1.png)","beforeContext":"","afterContext":""},{"line":446,"link":"/static/img/ConfigMap-1.png","original":"![avatar](/static/img/ConfigMap-1.png)","beforeContext":"","afterContext":""},{"line":450,"link":"/static/img/ConfigMap-2.png","original":"![avatar](/static/img/ConfigMap-2.png)","beforeContext":"","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Kubernetes概念简介\"\ndate:   2019-06-09 13:47:00 +0700\ncategories: [k8s]","level":2},{"line":7,"heading":"背景和k8s的出现","level":2},{"line":15,"heading":"Kubernetes的组成","level":2},{"line":27,"heading":"Pod","level":2},{"line":45,"heading":"Pod中的网络","level":4},{"line":51,"heading":"Pod中的存储","level":4},{"line":56,"heading":"管理Pod","level":4},{"line":63,"heading":"Pod Template","level":4},{"line":83,"heading":"Pod的状态","level":4},{"line":100,"heading":"容器探针","level":4},{"line":124,"heading":"Controller","level":2},{"line":128,"heading":"ReplicaSet","level":3},{"line":170,"heading":"Replication Controller","level":3},{"line":203,"heading":"Deployment","level":3},{"line":212,"heading":"Deployment的定义","level":4},{"line":233,"heading":"DaemonSet","level":3},{"line":242,"heading":"Service","level":2},{"line":254,"heading":"Service的定义","level":3},{"line":305,"heading":"服务发现","level":3},{"line":309,"heading":"通过环境变量发现服务","level":4},{"line":328,"heading":"DNS","level":4},{"line":334,"heading":"发布服务","level":3},{"line":343,"heading":"服务发现相关总结","level":3},{"line":346,"heading":"Ingress--统一管理外部访问","level":3},{"line":394,"heading":"存储","level":2},{"line":396,"heading":"Volume","level":3},{"line":402,"heading":"持久化存储","level":3},{"line":416,"heading":"配置","level":2},{"line":418,"heading":"资源分配","level":3},{"line":427,"heading":"资源抢占","level":3},{"line":442,"heading":"利用ConfigMap解耦配置","level":3}]},"63c0da2b6a0a8597767ec896ff9d9a4776be9d5dcd7a1acf7ff9f3d6b50fc368":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JVM方法执行探究\"\ndate:   2019-07-01 22:00:00 +0700\ncategories: [jvm]","level":2},{"line":19,"heading":"重载的规则","level":2},{"line":28,"heading":"JVM如何识别方法","level":2},{"line":33,"heading":"JVM的静态绑定和动态绑定","level":2},{"line":43,"heading":"方法的符号引用","level":2},{"line":93,"heading":"虚方法","level":2},{"line":102,"heading":"方法表","level":2},{"line":111,"heading":"内联缓存(inline cache)","level":2}]},"2648cb433e1f7fbf71ded0343ba97def05cc34d03e3c661fb64a33230c1a41e9":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JVM字节码monitorenter分析\"\ndate:   2019-07-21 20:18:00 +0700\ncategories: [jvm]","level":2},{"line":7,"heading":"monitorenter","level":2},{"line":13,"heading":"源码分析","level":2},{"line":82,"heading":"分支1:已偏向当前线程","level":4},{"line":95,"heading":"分支2:类markword偏向模式关闭","level":4},{"line":115,"heading":"分支3:epoch不等于class中的epoch，尝试重偏向","level":4},{"line":141,"heading":"分支4:线程id不一致,可能是匿名偏向","level":4},{"line":166,"heading":"轻量级锁重入逻辑","level":3},{"line":190,"heading":"重偏向与撤销","level":3},{"line":317,"heading":"单个对象偏向撤销","level":3},{"line":370,"heading":"批量逻辑","level":3},{"line":436,"heading":"重量级锁","level":2},{"line":582,"heading":"重量级锁竞争逻辑","level":3},{"line":780,"heading":"重量级锁的释放","level":3}]},"25ba936ed2e5f46688e5b6d80bbf6b73fd77362d964e8c2cb85a34099189d570":{"links":[],"embeds":[{"line":20,"link":"/static/img/netty-memalloc-chunklist.webp","original":"![avatar](/static/img/netty-memalloc-chunklist.webp)","beforeContext":"划分的依据是Chunk的空间使用率, 如下, x轴为使用率:","afterContext":"Chunk的初始状态为INIT."},{"line":24,"link":"/static/img/netty-memalloc-huoban.webp","original":"![avatar](/static/img/netty-memalloc-huoban.webp)","beforeContext":"Chunk是一个较大的内存块, 默认为16MB, 一个Chunk默认分为2048个Page, 每个Page大小为16 * 1024 * 1024 / 2048 = 8192 = 8K,Page由一个完全平衡二叉树管理, 其中叶子为2048个Page.","afterContext":"如上图所示, 二叉树高12, 叶节点数目为2^11 = 2048, 正好为一个Chunk中Page的数目.假设我们要在一个尚未开始分配的Chunk中分配一个Tiny类型的空间, 那么它会先判断这个大小会在那一层分配, Tiny小于一个Page的大小所以在11层分配, 接下来如果分配一个18KB的大小, 该大小需要4个Page(分配空间的规范化, 下面会讲到, 实际会分配32KB), 故需要在第九层分配, 512这个节点无法满足, 那么选取的是513这个节点进行分配."},{"line":163,"link":"/static/img/netty-memalloc-chunklist.png","original":"![avatar](/static/img/netty-memalloc-chunklist.png)","beforeContext":"各个ChunkList的关系如下所示:","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Netty内存池原理分析\"\ndate:   2019-07-27 02:00:00 +0700\ncategories: [netty]","level":2},{"line":7,"heading":"Overview","level":2},{"line":52,"heading":"PooledByteBufAllocator","level":2},{"line":141,"heading":"PoolArena初步解析","level":2},{"line":261,"heading":"线程本地缓存分配","level":2},{"line":270,"heading":"MemoryRegionCache","level":3},{"line":409,"heading":"SubpagePool分配","level":2},{"line":452,"heading":"ChunkList分配","level":2},{"line":501,"heading":"Chunk","level":2},{"line":503,"heading":"Chunk结构分析","level":3},{"line":568,"heading":"allocate分析","level":3},{"line":591,"heading":"allocateSubpage","level":4},{"line":710,"heading":"PoolSubpage结构分析","level":3},{"line":874,"heading":"PooledByteBuf在Chunk中的初始化","level":3},{"line":937,"heading":"内存的回收","level":2},{"line":938,"heading":"Subpage内存的释放","level":3},{"line":974,"heading":"Chunk内存的释放","level":3},{"line":1007,"heading":"ChunkList中内存的释放","level":3},{"line":1044,"heading":"Arena中内存的释放","level":3},{"line":1083,"heading":"总结","level":2}]},"6480e30ae8d3749e12b38d76658562a128ed28556b200578feb336daf729997c":{"links":[],"embeds":[{"line":10,"link":"/static/img/netty-threadmodel-eventloopclasspic.png","original":"![avatar](/static/img/netty-threadmodel-eventloopclasspic.png)","beforeContext":"","afterContext":""},{"line":44,"link":"/static/img/netty-threadmodel-reactor.png","original":"![avatar](/static/img/netty-threadmodel-reactor.png)","beforeContext":"","afterContext":"下面解释一下这张图片里几个组件的作用."},{"line":57,"link":"/static/img/netty-threadmodel-subreactor.png","original":"![avatar](/static/img/netty-threadmodel-subreactor.png)","beforeContext":"在此我们将以最经典的Reactor模型来阐述Reactor模式的工作流程.","afterContext":""},{"line":66,"link":"/static/img/netty-threadmodel-eventloop.png","original":"![avatar](/static/img/netty-threadmodel-eventloop.png)","beforeContext":"","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Netty线程模型分析\"\ndate:   2019-08-03 21:50:00 +0700\ncategories: [netty]","level":2},{"line":7,"heading":"概述","level":2},{"line":43,"heading":"Reactor模式简介","level":2},{"line":56,"heading":"Reactor模式流程","level":2},{"line":65,"heading":"Netty的线程模型","level":2},{"line":71,"heading":"关键源码分析","level":2},{"line":72,"heading":"一. `ServerBootstrapAcceptor`作用分析","level":3},{"line":149,"heading":"二. ChildGroup的注册Channel流程","level":3}]},"1885f2738d2b84fcf3ec2450a29b83db25f4e9d7840eae661093da109e19b53f":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Rocketmq broker消息存储流程\"\ndate:   2019-09-08 02:06:00 +0700\ncategories: [rocketmq]","level":2},{"line":7,"heading":"源码阅读目标","level":2},{"line":10,"heading":"前置准备","level":2},{"line":12,"heading":"Netty服务端","level":3},{"line":43,"heading":"消息解码","level":4},{"line":96,"heading":"消息分发","level":5},{"line":143,"heading":"CommitLog消息存储","level":2},{"line":146,"heading":"消息处理","level":3},{"line":174,"heading":"CommitLog的putMessage方法解析","level":3},{"line":265,"heading":"MappedFile的创建","level":3},{"line":353,"heading":"消息append","level":3},{"line":391,"heading":"消息commit以及刷盘分析","level":3},{"line":437,"heading":"消息commit的具体分析","level":4},{"line":519,"heading":"消息刷盘的具体分析","level":4},{"line":552,"heading":"ConsumeQueue","level":2}]},"dd1a76225249b1f4148dcb4d3668d3f471b0418b4b520810d4516bdddc195e40":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"操作系统: 进程相关概念简介\"\ndate:   2019-09-11 23:13:00 +0700\ncategories: [OS]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"进程","level":2},{"line":12,"heading":"进程的定义","level":4},{"line":16,"heading":"进程的创建:","level":4},{"line":27,"heading":"进程的终止:","level":4},{"line":35,"heading":"进程的分层:","level":4},{"line":38,"heading":"进程的状态","level":4},{"line":51,"heading":"进程的实现","level":4}]},"05a0a1d197bfbb0e456a9b9df95b30ed0ca7411fcbb40db556dcbf51cb46367d":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Rocketmq IndexFile源码解读\"\ndate:   2019-09-15 10:02:00 +0700\ncategories: [rocketmq]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"IndexFile的作用","level":2},{"line":13,"heading":"IndexFile的组成","level":2},{"line":37,"heading":"Hash冲突解决方案","level":2},{"line":78,"heading":"根据key定位条目物理位移流程源码解读","level":2}]},"8f9415d2fd1016cf4303caa4dadc377e5999763336cf203a97d17e5ea548bc57":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"操作系统: 线程相关概念简介\"\ndate:   2019-09-16 20:02:00 +0700\ncategories: [os]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"为什么需要线程?","level":2},{"line":14,"heading":"经典线程模型","level":2},{"line":21,"heading":"POSIX下的线程","level":2},{"line":28,"heading":"线程的实现","level":2},{"line":31,"heading":"在用户空间实现线程","level":3},{"line":37,"heading":"在内核实现线程","level":3},{"line":42,"heading":"混合实现","level":3}]},"5ac52829633e6240d80c50e022b4811ca952dbd66881995cc410893abe8c37a2":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"线上GC问题排查\"\ndate:   2019-09-20 20:02:00 +0700\ncategories: [jvm]","level":2},{"line":7,"heading":"出现线上GC问题时处理步骤：","level":2},{"line":55,"heading":"PermGen耗尽造成的频繁GC","level":2}]},"545decc284ca2401be2bb05d7e004a1bdaa02d0717ba228a793a5843eeaf3693":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"K8s集群搭建步骤: 单master\"\ndate:   2019-09-20 20:02:00 +0700\ncategories: [k8s]","level":2},{"line":8,"heading":"安装必要软件","level":2},{"line":25,"heading":"设置 yum repository","level":2},{"line":33,"heading":"安装并启动 docker","level":2},{"line":40,"heading":"安装 nfs-utils","level":2},{"line":46,"heading":"关闭 防火墙","level":2},{"line":52,"heading":"关闭 SeLinux","level":2},{"line":58,"heading":"关闭 swap","level":2},{"line":65,"heading":"修改 /etc/sysctl.conf","level":2},{"line":83,"heading":"配置K8S的yum源","level":2},{"line":97,"heading":"卸载旧版本","level":2},{"line":100,"heading":"安装kubelet、kubeadm、kubectl","level":2}]},"b7a9fa5fa07c46bd435706c3c42e3c26098bc2bf0aa5a26afc278a0d3c6edd70":{"links":[],"embeds":[{"line":53,"link":"/static/img/jdk-stream-lianbiao.png","original":"![avatar](/static/img/jdk-stream-lianbiao.png)","beforeContext":"链表结构stream中的每一步操作最终的表示形式是链表结构的.如下图所示, 我们的示例代码最终会表示成如下形式.","afterContext":""},{"line":137,"link":"/static/img/jdk-stream-pipeline-class.png","original":"![avatar](/static/img/jdk-stream-pipeline-class.png)","beforeContext":"该方法new了一个ReferencePipeline.Head对象, 这个对象就是我们之前提到的链表结构的头部.Head相关的类图如下所示:","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"JDK8 stream api源码简单分析\"\ndate:   2019-10-06 18:12:00 +0700\ncategories: [jdk,sa]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"开篇","level":2},{"line":20,"heading":"概念","level":2},{"line":59,"heading":"源码解析","level":2},{"line":82,"heading":"ArrayListSpliterator源码解析","level":3},{"line":220,"heading":"TerminalOp执行过程解析","level":3},{"line":374,"heading":"总结","level":2}]},"17b31e63d2a1d8e04fc35941e3a61c034482a588af4b98e685b022fc9506e220":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Dledger中Candidate选举流程\"\ndate:   2020-01-08 22:20:00 +0700\ncategories: [rocketmq,raft]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"源码分析","level":2},{"line":81,"heading":"处理投票请求","level":2},{"line":128,"heading":"对投票结果的处理","level":2},{"line":260,"heading":"转变为Leader","level":2},{"line":271,"heading":"与原本的Raft算法的不同之处","level":2}]},"35211fa50e41871c596f75933fe5ecf63728a2d58a9915fecea09ce115fb3651":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Dledger中Leader和Follower流程详解\"\ndate:   2020-02-17 15:20:00 +0700\ncategories: [rocketmq,raft]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"源码分析","level":2},{"line":14,"heading":"Leader","level":3},{"line":121,"heading":"Follower","level":3}]},"61baf84651c039505eeb79ffa72178d2f314bf811047dda4881d6cc4d02f8f10":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Dledger中日志追加流程概述\"\ndate:   2020-02-18 15:20:00 +0700\ncategories: [rocketmq,raft]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"源码分析","level":2}]},"4fa8c0d6e8f5197c283189593c24a2bcf0802a621ca618f1126c635363071fb0":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Dledger中日志追加流程详解\"\ndate:   2020-02-18 15:20:00 +0700\ncategories: [rocketmq,raft]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"源码分析","level":2},{"line":32,"heading":"EntryDispatcher","level":3},{"line":290,"heading":"EntryHandler","level":3},{"line":487,"heading":"QuorumAckChecker","level":3}]},"21508f6a33f3f70dfc7e5c9a658783099a3d6b1b9dcfc02d13f536bb03e280a5":{"links":[],"embeds":[{"line":239,"link":"/static/img/选举流程.png","original":"![avatar](/static/img/选举流程.png)","beforeContext":"","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper Leader选举流程源码解读\"\ndate:   2020-06-01 15:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"源码分析","level":2},{"line":236,"heading":"总结","level":2}]},"1f4ba9c9174f47988d3cab520c9b26982d113a94b7bb95756cd0a6c0c381d829":{"links":[],"embeds":[{"line":1081,"link":"/static/img/消息消费流程.png","original":"![avatar](/static/img/消息消费流程.png)","beforeContext":"流程图","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Rocketmq 消息消费过程源码分析\"\ndate:   2020-06-09 10:02:00 +0700\ncategories: [rocketmq]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"基于推模式下的消息消费过程分析","level":2},{"line":22,"heading":"使用示例","level":3},{"line":137,"heading":"消费者启动流程","level":3},{"line":220,"heading":"队列负载","level":3},{"line":274,"heading":"ProcessQueue","level":4},{"line":314,"heading":"消费请求发送","level":3},{"line":339,"heading":"Broker端对消费请求的处理","level":3},{"line":453,"heading":"Broker端长轮询的实现","level":4},{"line":543,"heading":"消息拉取回调","level":3},{"line":564,"heading":"消息消费过程以及消费结果处理","level":3},{"line":648,"heading":"细节: 消费进度的计算策略","level":3},{"line":710,"heading":"顺序消费","level":2},{"line":713,"heading":"使用示例","level":3},{"line":785,"heading":"队列负载以及加锁处理","level":3},{"line":858,"heading":"顺序消息消费以及消费结果处理","level":3},{"line":931,"heading":"定时消息","level":3},{"line":1080,"heading":"总结","level":2}]},"0f418df4f8021e94c9265e1f2b8597b61b72f6eb9ab0bbccf229d536a5155887":{"links":[],"embeds":[{"line":328,"link":"/static/img/成员发现&数据同步.png","original":"![avatar](/static/img/成员发现&数据同步.png)","beforeContext":"","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper Leader成员发现以及数据同步流程源码分析\"\ndate:   2020-06-13 15:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":14,"heading":"成员发现","level":2},{"line":17,"heading":"Leader的初始化过程","level":3},{"line":90,"heading":"FOLLOWER的初始化流程","level":3},{"line":117,"heading":"创建新的epoch","level":3},{"line":170,"heading":"数据同步","level":2},{"line":187,"heading":"数据同步--DIFF、TRUNC还是SNAP?","level":3},{"line":325,"heading":"总结","level":2}]},"5a53b2960322021ebbac7405a151f923b9c7ea0fbd6e5904a3a5391f5586f521":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Kafka源码学习笔记\"\ndate:   2020-06-13 15:20:00 +0700\ncategories: [kafka]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"分区副本","level":3},{"line":23,"heading":"ISR","level":4},{"line":30,"heading":"消息发送的坑,要注意避免","level":3},{"line":39,"heading":"拦截器","level":3},{"line":41,"heading":"事务型 Producer","level":3},{"line":44,"heading":"重平衡触发的条件","level":3},{"line":66,"heading":"重平衡详解","level":3},{"line":85,"heading":"消费位移管理","level":3},{"line":104,"heading":"Producer创建连接的时机","level":3},{"line":110,"heading":"Consumer如何管理连接","level":3},{"line":116,"heading":"Broker如何处理请求","level":3},{"line":123,"heading":"高水位与Leader Epoch","level":3}]},"4e8c310927cd7b49319ce898b4d78e0b2c5808e30cf665aca681e5dd60b154cc":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Kafka核心概念","level":1},{"line":1,"heading":"目标","level":2},{"line":5,"heading":"概念","level":2}]},"64f8385886013f926a84d9f3a60cac74f569aa6c2255440ee1e77c71a999f2df":{"links":[],"embeds":[],"tags":[],"headings":[]},"3434ac7f57274ec27941fa7caca94d5c63cb734a050e2374b0fa041a30145188":{"links":[{"line":97,"link":"2022-06-23-kafka-broker-request-process#细节 处理client端请求的有序性是如何保证的","original":"[[2022-06-23-kafka-broker-request-process#细节 处理client端请求的有序性是如何保证的]]","displayText":"","beforeContext":"对read事件,读取channel中的请求数据将其放入到selecor的completedReceives属性中,将channel置为mute状态.(参见:","afterContext":")"}],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Kafka源码学习笔记 之 Broker端是如何处理请求的\"\ndate:   2020-07-13 15:20:00 +0700\ncategories: [kafka]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":10,"heading":"SocketServer的初始化","level":2},{"line":34,"heading":"连接的Accept","level":2},{"line":69,"heading":"Processor线程循环","level":2},{"line":104,"heading":"细节:处理client端请求的有序性是如何保证的","level":3},{"line":107,"heading":"RequestHandler","level":2}]},"184d16995e7e2f2e1b4e4de5528d43bed4ef230b39c93d1af6a7089bc6443b52":{"links":[],"embeds":[],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"mosn请求流程笔记\"\ndate:   2020-07-27 15:20:00 +0700\ncategories: [service mesh,mosn]","level":2},{"line":7,"heading":"学习目标","level":2}]},"47dd69e689e4765097c55a5c07a972623d21886761c21ef2771dd7de5cfc93e7":{"links":[],"embeds":[],"tags":[],"headings":[]},"34989133633544f959e93a7880da66f0e8467176aba9487f03820dc42406f283":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":99,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":139,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":79,"heading":"异步API--create","level":4},{"line":89,"heading":"同步API--create","level":4},{"line":141,"heading":"总结","level":2}]},"2aa0c7e10989d8f972e23735d3dd558ac5a18c6d9dc13db0b6bde91f0021bff6":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":100,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":140,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":80,"heading":"异步API--create","level":4},{"line":90,"heading":"同步API--create","level":4},{"line":142,"heading":"总结","level":2}]},"6811547d92ce789bf232cc1fd88aeac0e10dd09622166c61c58c8fba7ca4ada8":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":100,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":140,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":80,"heading":"异步API--create","level":4},{"line":90,"heading":"同步API--create","level":4},{"line":142,"heading":"总结","level":2}]},"41738451d64d9e99387be2ba052d00f36442efe935a419c722e13bcd4764f269":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":101,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":141,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":81,"heading":"异步API--create","level":4},{"line":91,"heading":"同步API--create","level":4},{"line":143,"heading":"总结","level":2}]},"24a1e03774a8c45e2d1f16106df4c46c1c4d8680d6181797b71f55921a8a44e4":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":102,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":142,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":82,"heading":"异步API--create","level":4},{"line":92,"heading":"同步API--create","level":4},{"line":144,"heading":"总结","level":2}]},"213161b659fe31ba7e9eee6850596300e030a7202e1200c2e88b3cb910356ea3":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":102,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":142,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":82,"heading":"异步API--create","level":4},{"line":92,"heading":"同步API--create","level":4},{"line":144,"heading":"总结","level":2}]},"a4909362f9b7ecc18d435ff6830555645fe815fff4e6104365cf51362c705da2":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":103,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":143,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":83,"heading":"异步API--create","level":4},{"line":93,"heading":"同步API--create","level":4},{"line":145,"heading":"总结","level":2}]},"2c201ca6c7f97bd575cc7b877476b5fa27938ff08ccef671f0038f837a9f1c25":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":103,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":143,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":83,"heading":"异步API--create","level":4},{"line":93,"heading":"同步API--create","level":4},{"line":145,"heading":"总结","level":2}]},"6f10ca182af90bc1e15db88f17bc5e5393d3c604efc4175b2e3986bf8fb36967":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":103,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":143,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":83,"heading":"异步API--create","level":4},{"line":93,"heading":"同步API--create","level":4},{"line":145,"heading":"总结","level":2}]},"fe245060e677904fa1fd5f22e09e4d18b33c966079b51f3d9174fb17c74d73c1":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":103,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":143,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":83,"heading":"异步API--create","level":4},{"line":93,"heading":"同步API--create","level":4},{"line":145,"heading":"总结","level":2}]},"60b44d606409ee7eaa2e8db1d3c1062bff313e01038dd47a6b3b65c44b6a4395":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"2f432c0b7f3adf5115af9892acd63f98fcceb01485a4ae935bfe8030ff1aee15":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"4cd22b9062a112d3a8bc02b01400fafcf6409d6a355dbcc21479fd2cf4a837ed":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"fabd25a9b9bc266ef57fc4496f2bae135c6af631c90afba5e09a883c01aea1fd":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"553989280e59641fa2a32f5b032b0ec33befe6042fc31f6b30dd9aaf75df545a":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"3d5abdf8e3f05fe7f26892af4d555eee19b13121b7f210e2f113b295a83857d6":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"035111525d311c546c94978c6f6fca4d225cbbf914f05bbbf33af30bf634ce19":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"f38a3012b92117c09165fc5d79bf1f21fcdbd63bcac75eb3e78fbd9b55f1012e":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"c2e45482f18a9f8a979182cc53dd9996277371cbefded2c9841b04bee3dca47e":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"09ab0a2696695e6fbf77c45089daf0bb02eb7d51d583068543de0373dabddc53":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":105,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":145,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":85,"heading":"异步API--create","level":4},{"line":95,"heading":"同步API--create","level":4},{"line":147,"heading":"总结","level":2}]},"47b43d44c6be56095ffdc53c17c4f1e2fa7a6e084518a7b9cad59ea757d202cd":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":106,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":146,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":86,"heading":"异步API--create","level":4},{"line":96,"heading":"同步API--create","level":4},{"line":148,"heading":"总结","level":2}]},"6fea654a8331b9f5a150ce0f8b4ee982b5727f36bde435311f7ab2bd54949e69":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":106,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":146,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":86,"heading":"异步API--create","level":4},{"line":96,"heading":"同步API--create","level":4},{"line":148,"heading":"总结","level":2}]},"2d3abcb61cd33e7c5f15c1ca23caa35f814d244d4bb6a221afcfe91484083767":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":106,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":146,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":86,"heading":"异步API--create","level":4},{"line":96,"heading":"同步API--create","level":4},{"line":148,"heading":"总结","level":2}]},"32566844b743a3b7ca40ce7d39745804c79fe98e82d8bdd66be6bd7e1936d492":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":106,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":146,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":86,"heading":"异步API--create","level":4},{"line":96,"heading":"同步API--create","level":4},{"line":148,"heading":"总结","level":2}]},"f4f2b3b3d3561c99244595a441ab4be4d5e0a80dbb771260105b0dfb5185c98e":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"78392aa7ac4fd5d830a1f96f5b2cdf84bc3a48e553dee481facb0cf970b61ec5":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"82b0166409f48d36cbda211c24f38b0a750a0e2519a35dbd82eff8625d190208":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"8f7ff496d514481b41795d59b7d16acb6c8dcbd7631fc2f1c8b33beb8749e7aa":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"0c4f5a694eb633095d76505c71fb1ef54af5e5ed9ab189da4c29923dc12d2bba":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"5d9c38957f3c484373631a828f8ab899b548904ee58b975ee652f0d6548a74f4":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"371138b44b438528a396caf9e148588271dbac924ed10c302aee8cc29e0a187d":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"4d2958c443d0e0faf08422fd69e518ff25b4ec2aad213551c676786fc9f20327":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"13d55d4c56249885f876bd04ada1f710b02cb977a173963b69de6ef3fda891cc":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"f22bad1d4fe069ea65e6492cdb642faf2599ce3ba8b00e3ee7b810ac6395768f":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"1544bc5399d6d79eb43017951f80b273076c2bb4e983ac74efaa8042dc1e4a44":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"2d0357d7d8c8f85390a4c5659e8469d6590d6f6306b6458901d1c63e1f3eb981":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"6f098bae7fd30420fd2ad1651226377fef990e6c421cec72d74bf0de388385bb":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"58b824cf6484cc013c007bd8c86ea7c2df76876e3d7d7a439e98e92948311562":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"22edc95796bb01ab85146cf14267bb1631f28c61f1c45bed19eb8f83373489d1":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"356bf9b6481072169b42d7f2a0b4d7477af1ed6529059a6fec28934fd68e4e80":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"510d7e4795f7395febf39f62a331a93c91f1c8468072629995594463dff50427":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"598387fb65dec2127d05aaedf042fb8d6d5595ad068f101598d081630b0bae11":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"d44dfe85cd35226de5711984ad83fe2d3b7ba5f871ba20a0d72cb4833ceffda1":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"51f6853e0912fc75a8ead6e100b2d5b2ed4dc874746a94b33022804c78736252":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"9d4f4a0b751f8b407410ffd404e9bb0e3269c0f5481a3c2f3fdfe60dcb53fce0":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"0cd70cb8467acb5881b5737326b61a62a09e69b9c52f916219269c1d6559c764":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"827e75415bdd19901dfe946fbb2c5ce09457948ed54fb9801043eb1f922ce846":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"8db4ca6b9d62f323a9a406a7da1e654e7a8635795ee1f5894805cef1f266f0ff":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"6b7e6c6426b662f42c70231c40169a6140f1547a068e288cbafe4c772d2423e4":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":85,"link":"2020-08-02-zookeeper-request-handle","original":"![[2020-08-02-zookeeper-request-handle]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"b76a8914a1d1e125f91a92f09de205c05e517704a5b80c34460b32dd7a77cfd1":{"links":[],"embeds":[{"line":40,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":85,"link":"2020-08-02-zookeeper-request-handle#","original":"![[2020-08-02-zookeeper-request-handle#]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":107,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":147,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":42,"heading":"SendThread","level":4},{"line":43,"heading":"SendThread的Loop","level":5},{"line":71,"heading":"SendThread的readResponse","level":5},{"line":87,"heading":"异步API--create","level":4},{"line":97,"heading":"同步API--create","level":4},{"line":149,"heading":"总结","level":2}]},"491a4b8231d4ea03c392b6a63e067d11cb32bfec1b3088160ea8d94c31f5e684":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#","original":"![[2020-08-02-zookeeper-request-handle#]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":108,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":148,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"","level":2},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":88,"heading":"异步API--create","level":4},{"line":98,"heading":"同步API--create","level":4},{"line":150,"heading":"总结","level":2}]},"ab7d895ec42bf9730b3f9234afe64938b5c6e2cfafa48408100615874e3ef9f3":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#","original":"![[2020-08-02-zookeeper-request-handle#]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":108,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":148,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"q qiu","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":88,"heading":"异步API--create","level":4},{"line":98,"heading":"同步API--create","level":4},{"line":150,"heading":"总结","level":2}]},"f4984e2501676032bdbaf3a7ad1d5dcc0fc7095e63e14fa9770c8beda50a31b7":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#","original":"![[2020-08-02-zookeeper-request-handle#]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":108,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":148,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程tu","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":88,"heading":"异步API--create","level":4},{"line":98,"heading":"同步API--create","level":4},{"line":150,"heading":"总结","level":2}]},"62d8559f3f5d6398d3d7daa6ed90d2cc58fc9364b89c1ba1e259aa0f65843dea":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#","original":"![[2020-08-02-zookeeper-request-handle#]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":108,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":148,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":88,"heading":"异步API--create","level":4},{"line":98,"heading":"同步API--create","level":4},{"line":150,"heading":"总结","level":2}]},"67e8039911069779d2f6d3a100c9f8aaa8ac74c2f5fe3ef40c3a9ac0480ee472":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":108,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":148,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":88,"heading":"异步API--create","level":4},{"line":98,"heading":"同步API--create","level":4},{"line":150,"heading":"总结","level":2}]},"c7a47f3e29f62aa7dc81495574c777e1b52012ea3b8fd74c06e8c8282dc88a79":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":109,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":149,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":89,"heading":"异步API--create","level":4},{"line":99,"heading":"同步API--create","level":4},{"line":151,"heading":"总结","level":2}]},"f8748323233827d1fbd7e1e1c0985623cf2481c8899ad6b124eac3af65843d97":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":109,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":149,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":89,"heading":"异步API--create","level":4},{"line":99,"heading":"同步API--create","level":4},{"line":151,"heading":"总结","level":2}]},"212b91cc19fcd98e0947f164c806fdc2f61dbdd43db776089448af2f4a89720c":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"0a1496e69a59cdb0ebb629ba83d0d3b2e8deaf44cd9d02bcc7e2ba22c357e294":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"31c1ee3ec1766b16defa86427441ebd91b1b0489dbe55afe23e81f9c280b6499":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"a59a28a3eb025ae3b9229ec20b4d15da6f03d6b7343238fd065eaf7baaea0444":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"9d353884f51ff4f491a409aa8213348fd44da77bac4231c1f349c02f18c51b7e":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"dacaa393c4d5f0f604e8464b2d5a50463023c31cb8468ea4766271eec3933c6c":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"72f5d59cbd41becd5140251dc4c4fbf872a03f8fd82ec099680f5c2f91f30502":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"2554581c6c5fe37a33858e8e9972c9f0977adf5c229920428ecb8687f5911827":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"92400f003eed37422ea7c91f533e945d75b51e503be4805f4ca5f90056bae49e":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"e6e72806918ddd0fa146dcd2a7cb0f8152f4338600808d1b1eae7a9482346356":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#","original":"![[2020-08-02-zookeeper-request-handle#]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":110,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":150,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":90,"heading":"异步API--create","level":4},{"line":100,"heading":"同步API--create","level":4},{"line":152,"heading":"总结","level":2}]},"473e98d8760699dce96323f723294a1fa53ed6c5d7d619bae5840d18c68b66a8":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"bd6bdb2b0e442ef8fa4fbefbc6570c3f813e01a54f5d241b65cf0cd198784d80":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"bd4d0f3f5123afade268fcb3abaff5a27902c01787ed69a9835820d632db140b":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"a0e3314f76dbba07d739579426972f8650f2dea37292ef39445d139e8f3a04f3":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"42a32bf628b0a7de4b27af1e71a5783f3346fc68e19098f5b58f92d58169a743":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"44849595579c971b53b731b9088958505ddaa6eb9269b76a67845144c0b6f5ff":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"72cbeba9a24fecf12d6d4d45e66f626c042bc2c539c29460c7bc9b10c58f203d":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"0c5f2480543615db1752bbd04fac00f240a1c1845b2876c16276a95f700d17f6":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"d48ec20824bcf12a5b98e2168dd1e575abd5b7ab52f54a14c40a580d0d84f9fa":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"3393d38cef189a97330072aea3797361a371ff5aaa3895dea235acc0ab26efb2":{"links":[],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"![[2020-08-02-zookeeper-request-handle#同步API--create]]","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"6dfd030ae8778935a3bd0928423c08dace5aada81a8c1bacda2d49b7cb0571bc":{"links":[{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"![[2020-08-02-zookeeper-request-handle#请求流程图]]","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"1de9903e3b4fe9d70aa333e1805067b0dcd643df3d24c055d880765fb106133d":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化|","original":"![[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"a7fc0a22bbc778d7e55926e095be5be3f27b6fca16e9040b6639087139c8939c":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化","original":"[[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","displayText":"","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"9e8995f22150398641d99fd0de62713c2752702b8f70f5272f152a1730a15842":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化","original":"[[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","displayText":"","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"ca307970584fe2914304fb98dc124867a8ee0c43bad7c83216ae954ad8e85432":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化","original":"[[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","displayText":"","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"2397eb9eab34e8805e550e5d88257c4486dd630168729f9d75b115637bfe24df":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化","original":"[[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","displayText":"","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"465bb8a12142753b89ef69289dace440434addfb280f02ccd7df86537e828ad8":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化","original":"[[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","displayText":"","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""},{"line":152,"link":"2020-08-02-zookeeper-request-handle#","original":"[[2020-08-02-zookeeper-request-handle#]]","displayText":"","beforeContext":"如果是正常的响应消息的话,会从incomingBuffer中读取响应,这里会调用sendThread的readResponse方法,见:","afterContext":",接下来清理lenBuffer,将incomingBuffer重新设置为lenBuffer."}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]},"b7da21dffa3a77145d5eaf77b20a9d5319d1691a2e346e02eb7e04a096ad554c":{"links":[{"line":86,"link":"2020-08-02-zookeeper-request-handle#请求流程图","original":"[[2020-08-02-zookeeper-request-handle#请求流程图]]","displayText":"","beforeContext":"从pendingQueue中出队一个Packet(pendingQueue中存的是等待响应的Packet,见","afterContext":"),因为Zk的命令执行保证是FIFO的,所以响应也是按照顺序返回的."},{"line":88,"link":"2020-08-02-zookeeper-request-handle#同步API--create","original":"[[2020-08-02-zookeeper-request-handle#同步API--create]]","displayText":"2020-08-02-zookeeper-request-handle#同步API–create","beforeContext":"如果是同步的情况,那么唤醒在此packet上等待的线程,见","afterContext":""},{"line":151,"link":"2020-08-02-zookeeper-request-handle#客户端连接初始化","original":"[[2020-08-02-zookeeper-request-handle#客户端连接初始化|]]","displayText":"","beforeContext":"如果我们还在一开始的初始化阶段(初始化的时候会发送建立session的请求","afterContext":""},{"line":152,"link":"2020-08-02-zookeeper-request-handle#SendThread的readResponse","original":"[[2020-08-02-zookeeper-request-handle#SendThread的readResponse]]","displayText":"","beforeContext":"如果是正常的响应消息的话,会从incomingBuffer中读取响应,这里会调用sendThread的readResponse方法,见:","afterContext":",接下来清理lenBuffer,将incomingBuffer重新设置为lenBuffer."}],"embeds":[{"line":41,"link":"zookeeper客户端请求.png","original":"![[zookeeper客户端请求.png]]","beforeContext":"","afterContext":""},{"line":111,"link":"2020-08-02-zookeeper-request-handle#异步API--create","original":"![[2020-08-02-zookeeper-request-handle#异步API--create]]","beforeContext":"将packet入队到ongoingQueue中(queuePacket见","afterContext":""}],"tags":[],"headings":[{"line":1,"heading":"layout: post\ntitle:  \"Zookeeper请求处理全流程\"\ndate:   2020-08-02 17:20:00 +0700\ncategories: [zookeeper]","level":2},{"line":7,"heading":"学习目标","level":2},{"line":11,"heading":"temp","level":2},{"line":12,"heading":"客户端连接初始化","level":4},{"line":31,"heading":"Packet","level":4},{"line":40,"heading":"请求流程图","level":4},{"line":43,"heading":"SendThread","level":4},{"line":44,"heading":"SendThread的Loop","level":5},{"line":72,"heading":"SendThread的readResponse","level":5},{"line":91,"heading":"异步API--create","level":4},{"line":101,"heading":"同步API--create","level":4},{"line":153,"heading":"总结","level":2}]}},"algorithmVersion":9}